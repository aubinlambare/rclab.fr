# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    image_directory: '%kernel.project_dir%/web/uploads/images'

services:

    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    #app_user.registration_listener:
     #   class : RCLAB\WebsiteBundle\EventListener\RegistrationListener
      #  arguments: []
       # tags:
        #    - { name: kernel.event_subscriber }


    rclab_user.service.role:
        class: RCLAB\UserBundle\Service\RoleService
        arguments: [security.role_hierarchy]

    rclab_website.remove.file:
        class: RCLAB\WebsiteBundle\Service\RemoveFile
        arguments: ["%kernel.project_dir%"]

  #  RCLAB\WebsiteBundle\Entity\Image:
   #     arguments:
    #        $uploadsDirectory: '%image_directory%'

    swiftmailer.mailer.default.transport:
            class:     Swift_SendmailTransport
            arguments: ['/usr/sbin/sendmail -t']